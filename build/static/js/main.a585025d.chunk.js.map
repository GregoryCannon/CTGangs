{"version":3,"sources":["matcher/Matcher.js","matcher/MatcherUtils.js","matcher/MatcherConstants.js","components/ResultDisplay.tsx","components/InputForm.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["__spreadArrays","this","s","i","il","arguments","length","r","Array","k","a","j","jl","exports","__esModule","getPairings","MatcherUtils_1","require","MatcherConstants_1","getLonelyNeighbors","vertex","lonelyNeighbors","_i","_a","neighbors","neighbor","push","createGraph","playerListA","playerListB","aVertices","bVertices","playerListA_1","player","id","name","rating","gang","playerListB_1","_b","aVertices_1","aVertex","_c","bVertices_1","bVertex","Math","abs","ALLOWED_RATING_DIFFERENCE","_d","aVertices_2","_e","bVertices_2","arrayRemove","array","elt","index","indexOf","splice","removeVertex","graph","pairAndRemove","vertex1","vertex2","pairing","console","log","pairs","aPlayerName","bPlayerName","handleStrandedPlayers","benchedPlayers","legalSubstitutions","handleNonCompetingLoners","adjacentToOneLoner","filter","x","didModifyGraph","vSelf","vLoner","getBestOpponent","possibleOpponents","minDelta","bestOpponent","possibleOpponents_1","opponent","delta","handleCompetingLoners","selectorVertices","matchHighestRankedPlayer","maxRating","highestRankedPlayer","graph_1","closestOpponent","listA","listB","initialGraph","printGraph","workingGraph","printGraphMini","prevSize","_loop_1","benchedPlayer","_loop_2","possibleOpponent","relevantPair","pair","teammateToSwapWith","originalNeighbors_1","addLegalSubstitutions","convertPbList","map","list","pb","CtlBList","CtlAList","testListB","testListA","ResultDisplay","props","className","result","subName","InputForm","state","playerDataList","challengingGangPlayersText","defendingGangPlayersText","statusText","handleSpreadsheetDataChange","bind","handleDefendingGangPlayersChanged","handleChallengingGangPlayersChanged","handleSubmit","event","target","value","split","rowString","tabSeparatedData","parseInt","setState","preventDefault","challengingPlayerData","parsePlayerData","defendingPlayerData","submitFunction","textareaInput","playerNames","playerName","filtered","toUpperCase","onSubmit","onChange","type","Component","NO_RESULT","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a585025d.chunk.js","sourcesContent":["\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nexports.__esModule = true;\r\nexports.getPairings = void 0;\r\nvar MatcherUtils_1 = require(\"./MatcherUtils\");\r\nvar MatcherConstants_1 = require(\"./MatcherConstants\");\r\n/**\r\n * This class takes two lists of players with Elo-like ratings, and automatically matches them up,\r\n * maximizing the number of people who can play (1st priority), and the proximity of skill (2nd priority)\r\n *\r\n * The Algorithm:\r\n *\r\n * 0) Create a bipartite graph where people who can face each other are connected\r\n * while(graph not empty)\r\n *    1) remove any vertices with degree 0 and \"bench\" them\r\n *    2) find vertices with degree 1 (who aren't competing for the same opponents) and pair them off\r\n *    3) resolve vertices with degree 1 who *are* fighting over the same opponents\r\n *    4) if all degrees 2+, match the highest rated player with their closest match\r\n *\r\n * (if any of these steps)\r\n */\r\n/* ------------------\r\n    Graph Creation\r\n  ------------------- */\r\nfunction getNeighbors(vertex, potentialOpponents) {\r\n    return potentialOpponents.filter(function (opponent) {\r\n        return Math.abs(opponent.rating - vertex.rating) <= MatcherConstants_1.ALLOWED_RATING_DIFFERENCE;\r\n    });\r\n}\r\nfunction getLonelyNeighbors(vertex) {\r\n    var lonelyNeighbors = [];\r\n    for (var _i = 0, _a = vertex.neighbors; _i < _a.length; _i++) {\r\n        var neighbor = _a[_i];\r\n        if (neighbor.neighbors.length === 1) {\r\n            lonelyNeighbors.push(neighbor);\r\n        }\r\n    }\r\n    return lonelyNeighbors;\r\n}\r\nfunction createGraph(playerListA, playerListB) {\r\n    // Construct the graph with the player data and empty connectivity\r\n    var aVertices = [];\r\n    var bVertices = [];\r\n    for (var _i = 0, playerListA_1 = playerListA; _i < playerListA_1.length; _i++) {\r\n        var player = playerListA_1[_i];\r\n        aVertices.push({\r\n            id: player.id,\r\n            name: player.name,\r\n            rating: player.rating,\r\n            gang: \"A\",\r\n            neighbors: [],\r\n            lonelyNeighbors: []\r\n        });\r\n    }\r\n    for (var _a = 0, playerListB_1 = playerListB; _a < playerListB_1.length; _a++) {\r\n        var player = playerListB_1[_a];\r\n        bVertices.push({\r\n            id: player.id,\r\n            name: player.name,\r\n            rating: player.rating,\r\n            gang: \"B\",\r\n            neighbors: [],\r\n            lonelyNeighbors: []\r\n        });\r\n    }\r\n    // Add neighbors\r\n    for (var _b = 0, aVertices_1 = aVertices; _b < aVertices_1.length; _b++) {\r\n        var aVertex = aVertices_1[_b];\r\n        for (var _c = 0, bVertices_1 = bVertices; _c < bVertices_1.length; _c++) {\r\n            var bVertex = bVertices_1[_c];\r\n            // If they are compatible, add the edge\r\n            if (Math.abs(aVertex.rating - bVertex.rating) <= MatcherConstants_1.ALLOWED_RATING_DIFFERENCE) {\r\n                aVertex.neighbors.push(bVertex);\r\n                bVertex.neighbors.push(aVertex);\r\n            }\r\n        }\r\n    }\r\n    // Add lonely neighbors (neighbors with degree 1)\r\n    for (var _d = 0, aVertices_2 = aVertices; _d < aVertices_2.length; _d++) {\r\n        var vertex = aVertices_2[_d];\r\n        vertex.lonelyNeighbors = getLonelyNeighbors(vertex);\r\n    }\r\n    for (var _e = 0, bVertices_2 = bVertices; _e < bVertices_2.length; _e++) {\r\n        var vertex = bVertices_2[_e];\r\n        vertex.lonelyNeighbors = getLonelyNeighbors(vertex);\r\n    }\r\n    return __spreadArrays(aVertices, bVertices);\r\n}\r\nfunction arrayRemove(array, elt) {\r\n    var index = array.indexOf(elt);\r\n    if (index > -1) {\r\n        array.splice(index, 1);\r\n    }\r\n}\r\nfunction removeVertex(vertex, graph) {\r\n    // Remove references to the vertex from its neighbors adjacency lists\r\n    for (var _i = 0, _a = vertex.neighbors; _i < _a.length; _i++) {\r\n        var neighbor = _a[_i];\r\n        arrayRemove(neighbor.neighbors, vertex);\r\n    }\r\n    // Remove itself from the graph\r\n    arrayRemove(graph, vertex);\r\n}\r\nfunction pairAndRemove(vertex1, vertex2, graph, pairing) {\r\n    console.log(\"Pairing\", vertex1.name, \"with\", vertex2.name);\r\n    pairing.pairs.push({\r\n        aPlayerName: vertex1.gang === \"A\" ? vertex1.name : vertex2.name,\r\n        bPlayerName: vertex1.gang === \"A\" ? vertex2.name : vertex1.name\r\n    });\r\n    // After pairing, both vertices are removed from the working graph\r\n    removeVertex(vertex1, graph);\r\n    removeVertex(vertex2, graph);\r\n}\r\n/** Removes stranded players from the graph and adds them to the benchedPlayers list.\r\n    Modifies both objects in-place */\r\nfunction handleStrandedPlayers(graph, pairing) {\r\n    // Loop backwards so splicing objects doesn't mess with the loop\r\n    for (var i = graph.length - 1; i >= 0; i--) {\r\n        var player = graph[i];\r\n        if (player.neighbors.length === 0) {\r\n            console.log(\"Removing stranded player\", player.name);\r\n            removeVertex(player, graph);\r\n            pairing.benchedPlayers.push({\r\n                name: player.name,\r\n                gang: player.gang,\r\n                legalSubstitutions: []\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction handleNonCompetingLoners(graph, pairing) {\r\n    // Find all vertices who have exactly one lonely neighbor\r\n    var adjacentToOneLoner = graph.filter(function (x) { return x.lonelyNeighbors.length === 1; });\r\n    var didModifyGraph = adjacentToOneLoner.length > 0;\r\n    while (adjacentToOneLoner.length > 0) {\r\n        // The first vertex in the list pairs itself with the lonely neighbor\r\n        var vSelf = adjacentToOneLoner[0];\r\n        var vLoner = vSelf.lonelyNeighbors[0];\r\n        pairAndRemove(vSelf, vLoner, graph, pairing);\r\n        removeVertex(vSelf, adjacentToOneLoner);\r\n        removeVertex(vLoner, adjacentToOneLoner);\r\n    }\r\n    return didModifyGraph;\r\n}\r\nfunction getBestOpponent(vertex, possibleOpponents) {\r\n    var minDelta = -1;\r\n    var bestOpponent = possibleOpponents[0]; // Only set to avoid setting this to null\r\n    for (var _i = 0, possibleOpponents_1 = possibleOpponents; _i < possibleOpponents_1.length; _i++) {\r\n        var opponent = possibleOpponents_1[_i];\r\n        var delta = Math.abs(opponent.rating - vertex.rating);\r\n        if (minDelta === -1 || delta < minDelta) {\r\n            minDelta = delta;\r\n            bestOpponent = opponent;\r\n        }\r\n    }\r\n    return bestOpponent;\r\n}\r\nfunction handleCompetingLoners(graph, pairing) {\r\n    // Find all vertices who get to choose between multiple loners\r\n    var selectorVertices = graph.filter(function (x) { return x.lonelyNeighbors.length > 1; });\r\n    var didModifyGraph = selectorVertices.length > 0;\r\n    while (selectorVertices.length > 0) {\r\n        // The first vertex in the list pairs itself with its closest-rated lonely neighbor\r\n        var vSelf = selectorVertices[0];\r\n        var vLoner = getBestOpponent(vSelf, vSelf.lonelyNeighbors);\r\n        pairAndRemove(vSelf, vLoner, graph, pairing);\r\n        removeVertex(vSelf, selectorVertices);\r\n        removeVertex(vLoner, selectorVertices);\r\n    }\r\n    return didModifyGraph;\r\n}\r\nfunction matchHighestRankedPlayer(graph, pairing) {\r\n    if (graph.length === 0) {\r\n        return;\r\n    }\r\n    // Get the highest ranked player\r\n    var maxRating = -9999999;\r\n    var highestRankedPlayer = graph[0]; // To avoid dealing with null\r\n    for (var _i = 0, graph_1 = graph; _i < graph_1.length; _i++) {\r\n        var player = graph_1[_i];\r\n        if (player.rating > maxRating) {\r\n            maxRating = player.rating;\r\n        }\r\n    }\r\n    var possibleOpponents = graph.filter(function (x) { return x.gang !== highestRankedPlayer.gang; });\r\n    var closestOpponent = getBestOpponent(highestRankedPlayer, possibleOpponents);\r\n    pairAndRemove(highestRankedPlayer, closestOpponent, graph, pairing);\r\n}\r\nfunction addLegalSubstitutions(pairing, initialGraph) {\r\n    var _loop_1 = function (benchedPlayer) {\r\n        // Look through all their neighbors and see if their assigned opponent would\r\n        // be a valid opponent for the benched player\r\n        var originalNeighbors = initialGraph.filter(function (x) { return x.name === benchedPlayer.name; })[0].neighbors;\r\n        var _loop_2 = function (possibleOpponent) {\r\n            var relevantPair = pairing.pairs.filter(function (pair) {\r\n                return pair.aPlayerName === possibleOpponent.name ||\r\n                    pair.bPlayerName === possibleOpponent.name;\r\n            })[0];\r\n            var teammateToSwapWith = benchedPlayer.gang === \"A\"\r\n                ? relevantPair.aPlayerName\r\n                : relevantPair.bPlayerName;\r\n            console.log(\"Found legal substitution:\", benchedPlayer.name, \"for\", teammateToSwapWith);\r\n            benchedPlayer.legalSubstitutions.push(teammateToSwapWith);\r\n        };\r\n        for (var _i = 0, originalNeighbors_1 = originalNeighbors; _i < originalNeighbors_1.length; _i++) {\r\n            var possibleOpponent = originalNeighbors_1[_i];\r\n            _loop_2(possibleOpponent);\r\n        }\r\n    };\r\n    for (var _i = 0, _a = pairing.benchedPlayers; _i < _a.length; _i++) {\r\n        var benchedPlayer = _a[_i];\r\n        _loop_1(benchedPlayer);\r\n    }\r\n}\r\nfunction getPairings(listA, listB) {\r\n    var initialGraph = createGraph(listA, listB);\r\n    MatcherUtils_1.printGraph(initialGraph);\r\n    console.log(\"\\nStarting pairings\");\r\n    // Re-create the graph from scratch since it contains infinite loops and can't be cloned\r\n    var workingGraph = createGraph(listA, listB);\r\n    var pairing = {\r\n        pairs: [],\r\n        benchedPlayers: []\r\n    };\r\n    MatcherUtils_1.printGraphMini(workingGraph);\r\n    // Keep looping through applying the algorithm until it reaches a steady state\r\n    var prevSize = -1;\r\n    while (prevSize === -1 || workingGraph.length < prevSize) {\r\n        prevSize = workingGraph.length;\r\n        // Loop through the 4 phases of the alg, restarting the steps changes to the graph are made\r\n        handleStrandedPlayers(workingGraph, pairing);\r\n        if (handleNonCompetingLoners(workingGraph, pairing)) {\r\n            continue;\r\n        }\r\n        if (handleCompetingLoners(workingGraph, pairing)) {\r\n            continue;\r\n        }\r\n        matchHighestRankedPlayer(workingGraph, pairing);\r\n    }\r\n    addLegalSubstitutions(pairing, initialGraph);\r\n    MatcherUtils_1.printGraph(workingGraph);\r\n    return pairing;\r\n}\r\nexports.getPairings = getPairings;\r\n// console.log(\r\n//   \"\\n\\n Resulting pairing:\",\r\n//   getPairings(convertPbList(CtlAList), convertPbList(CtlBList))\r\n// );\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nexports.convertPbList = exports.printGraphMini = exports.printGraph = void 0;\r\nfunction printGraph(graph) {\r\n    console.log(\"\\n\\nGraph: [\");\r\n    for (var _i = 0, graph_1 = graph; _i < graph_1.length; _i++) {\r\n        var vertex = graph_1[_i];\r\n        console.log(\"{\");\r\n        console.log(\"\\tName: \", vertex.name, \"\\n\\tRating:\", vertex.rating, \"\\n\\tNeighbors:\", vertex.neighbors.map(function (x) { return x.name; }), \"\\n\\tLonely neighbors:\", vertex.lonelyNeighbors.map(function (x) { return x.name; }));\r\n        console.log(\"}\");\r\n    }\r\n    console.log(\"]\");\r\n}\r\nexports.printGraph = printGraph;\r\nfunction printGraphMini(graph) {\r\n    console.log(\"Graph:\", graph.map(function (x) { return x.name; }));\r\n}\r\nexports.printGraphMini = printGraphMini;\r\n/** Converts a list with names and PBs to names and ratings */\r\nfunction convertPbList(list) {\r\n    return list.map(function (x) { return ({\r\n        id: x.id,\r\n        name: x.name,\r\n        rating: 0.85 * x.pb + 400\r\n    }); });\r\n}\r\nexports.convertPbList = convertPbList;\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nexports.CtlBList = exports.CtlAList = exports.testListB = exports.testListA = exports.ALLOWED_RATING_DIFFERENCE = void 0;\r\nexports.ALLOWED_RATING_DIFFERENCE = 200;\r\nexports.testListA = [\r\n    {\r\n        id: 1,\r\n        name: \"GregBoomCannon\",\r\n        rating: 1220\r\n    },\r\n    { id: 2, name: \"Kofi\", rating: 1380 },\r\n    { id: 3, name: \"dog\", rating: 1540 },\r\n    { id: 4, name: \"Boone\", rating: 600 },\r\n    { id: 5, name: \"Arower\", rating: 20 },\r\n    { id: 6, name: \"Crower\", rating: 100 },\r\n];\r\nexports.testListB = [\r\n    {\r\n        id: 7,\r\n        name: \"JD\",\r\n        rating: 1580\r\n    },\r\n    { id: 8, name: \"Jake\", rating: 1560 },\r\n    { id: 9, name: \"gizmo\", rating: 960 },\r\n    { id: 10, name: \"Samantha\", rating: 700 },\r\n    { id: 11, name: \"Brower\", rating: 40 },\r\n];\r\nexports.CtlAList = [\r\n    { id: 11, name: \"Mattholland\", pb: 580 },\r\n    { id: 12, name: \"Iceblade\", pb: 510 },\r\n    { id: 13, name: \"Greg\", pb: 960 },\r\n    { id: 14, name: \"Zipley\", pb: 1040 },\r\n    { id: 15, name: \"Scamper\", pb: 997 },\r\n    { id: 16, name: \"Opaux\", pb: 1080 },\r\n    { id: 17, name: \"Andy\", pb: 1200 },\r\n    { id: 18, name: \"Jeff\", pb: 1245 },\r\n];\r\nexports.CtlBList = [\r\n    { id: 20, name: \"Eggmaster\", pb: 1120 },\r\n    { id: 21, name: \"Vernie\", pb: 460 },\r\n    { id: 22, name: \"Xerxos\", pb: 650 },\r\n    { id: 23, name: \"Torza\", pb: 880 },\r\n    { id: 24, name: \"Johann\", pb: 823 },\r\n    { id: 25, name: \"Kim\", pb: 840 },\r\n    { id: 26, name: \"Jerpidude\", pb: 1240 },\r\n    { id: 27, name: \"Sharky\", pb: 1060 },\r\n    { id: 28, name: \"TheMisterValor\", pb: 1000 },\r\n];\r\n","import React from \"react\";\r\nimport \"./ResultDisplay.css\";\r\nimport { Pairing, Pair, BenchedPlayer } from \"../matcher/Matcher\";\r\n\r\ninterface ResultDisplayProps {\r\n  result: Pairing;\r\n}\r\n\r\nexport function ResultDisplay(props: ResultDisplayProps) {\r\n  return (\r\n    <div className=\"result-container\">\r\n      <h2 id=\"result-title\">Results</h2>\r\n\r\n      {/* Matches */}\r\n      <h3 className=\"result-section-title\">Matches</h3>\r\n      {props.result.pairs.length > 0 ? (\r\n        <table id=\"matches-table\">\r\n          <tbody>\r\n            {props.result.pairs.map((pair: Pair) => (\r\n              <tr>\r\n                <td>{pair.aPlayerName + \" vs. \" + pair.bPlayerName}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <em>No matches possible!</em>\r\n      )}\r\n\r\n      {/* Benched Players */}\r\n      {props.result.benchedPlayers.length > 0 ? (\r\n        <div>\r\n          <h3 className=\"result-section-title\">Benched Players</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Player</th>\r\n                <th>Could Sub For</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.result.benchedPlayers.map(\r\n                (benchedPlayer: BenchedPlayer) => (\r\n                  <tr>\r\n                    <td>{benchedPlayer.name}</td>\r\n                    <td>\r\n                      {benchedPlayer.legalSubstitutions.length > 0 ? (\r\n                        benchedPlayer.legalSubstitutions.map(\r\n                          (subName: string) => <div>{subName}</div>\r\n                        )\r\n                      ) : (\r\n                        <em>None possible</em>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <div />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { PlayerData } from \"../matcher/Matcher\";\r\nimport \"./InputForm.css\";\r\n\r\ninterface InputFormProps {\r\n  submitFunction: Function;\r\n}\r\n\r\ninterface InputFormState {\r\n  playerDataList: Array<PlayerData>;\r\n  challengingGangPlayersText: string;\r\n  defendingGangPlayersText: string;\r\n  statusText: string;\r\n}\r\n\r\nclass InputForm extends Component<InputFormProps, InputFormState> {\r\n  constructor(props: InputFormProps) {\r\n    super(props);\r\n    this.state = {\r\n      playerDataList: [],\r\n      challengingGangPlayersText: \"\",\r\n      defendingGangPlayersText: \"\",\r\n      statusText: \"\",\r\n    };\r\n    this.handleSpreadsheetDataChange = this.handleSpreadsheetDataChange.bind(\r\n      this\r\n    );\r\n    this.handleDefendingGangPlayersChanged = this.handleDefendingGangPlayersChanged.bind(\r\n      this\r\n    );\r\n    this.handleChallengingGangPlayersChanged = this.handleChallengingGangPlayersChanged.bind(\r\n      this\r\n    );\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSpreadsheetDataChange(event: any) {\r\n    const rowsRaw = event.target.value.split(\"\\n\");\r\n    const playerDataList = rowsRaw.map((rowString: string) => {\r\n      const tabSeparatedData = rowString.split(\"\\t\");\r\n      return {\r\n        id: parseInt(tabSeparatedData[0]),\r\n        name: tabSeparatedData[1],\r\n        rating: parseInt(tabSeparatedData[7]),\r\n      };\r\n    });\r\n    console.log(playerDataList);\r\n    this.setState({\r\n      playerDataList,\r\n    });\r\n  }\r\n\r\n  handleChallengingGangPlayersChanged(event: any) {\r\n    this.setState({ challengingGangPlayersText: event.target.value });\r\n  }\r\n\r\n  handleDefendingGangPlayersChanged(event: any) {\r\n    this.setState({ defendingGangPlayersText: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event: any) {\r\n    event.preventDefault();\r\n    const challengingPlayerData = this.parsePlayerData(\r\n      this.state.challengingGangPlayersText\r\n    );\r\n    const defendingPlayerData = this.parsePlayerData(\r\n      this.state.defendingGangPlayersText\r\n    );\r\n\r\n    this.props.submitFunction(challengingPlayerData, defendingPlayerData);\r\n  }\r\n\r\n  parsePlayerData(textareaInput: string) {\r\n    const playerNames = textareaInput.split(\"\\n\").filter((x) => x.length > 0);\r\n    console.log(\"Defending players raw\", playerNames);\r\n    const playerDataList = [];\r\n    for (let playerName of playerNames) {\r\n      const filtered = this.state.playerDataList.filter(\r\n        (x) => x.name.toUpperCase() === playerName.toUpperCase()\r\n      );\r\n      if (filtered.length === 1) {\r\n        playerDataList.push(filtered[0]);\r\n      } else {\r\n        this.setState({\r\n          statusText:\r\n            this.state.statusText +\r\n            \"\\nUnable to find player \" +\r\n            playerName +\r\n            \" in spreadsheet data\",\r\n        });\r\n      }\r\n    }\r\n    return playerDataList;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <p id=\"status-text\">{this.state.statusText}</p>\r\n        <form id=\"main-form\" onSubmit={this.handleSubmit}>\r\n          {/* Box to paste the player data from Google Sheets */}\r\n          <div className=\"main-label\">Spreadsheet Player Data</div>\r\n          <div className=\"secondary-label\">\r\n            Make a box selecting all relevant players in the spreadsheet, and\r\n            then copy paste it here\r\n          </div>\r\n          <textarea\r\n            id=\"sheets-data-textarea\"\r\n            onChange={this.handleSpreadsheetDataChange}\r\n          ></textarea>\r\n\r\n          {/* Player list for challenging gang */}\r\n          <div className=\"main-label\">Participants from Challenging Gang</div>\r\n          <div className=\"secondary-label\">One per line, no commas</div>\r\n          <textarea\r\n            className=\"participant-list-textarea\"\r\n            onChange={this.handleChallengingGangPlayersChanged}\r\n          ></textarea>\r\n\r\n          {/* Player list for challenging gang */}\r\n          <div className=\"main-label\">Participants from Challenging Gang</div>\r\n          <div className=\"secondary-label\">One per line, no commas</div>\r\n          <textarea\r\n            className=\"participant-list-textarea\"\r\n            onChange={this.handleDefendingGangPlayersChanged}\r\n          ></textarea>\r\n\r\n          <input id=\"submit-button\" type=\"submit\" value=\"Get Matches!\"></input>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputForm;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { getPairings, PlayerData, Pairing } from \"../matcher/Matcher\";\nimport { ResultDisplay } from \"./ResultDisplay\";\nimport InputForm from \"./InputForm\";\n\ninterface AppState {\n  result: Pairing;\n}\n\nconst NO_RESULT = { pairs: [], benchedPlayers: [] };\n\nclass App extends Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      result: NO_RESULT,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(\n    challengingPlayerData: Array<PlayerData>,\n    defendingPlayerData: Array<PlayerData>\n  ) {\n    this.setState({\n      result: getPairings(challengingPlayerData, defendingPlayerData),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Welcome to Classic Tetris Gangs!</p>\n        </header>\n\n        <div id=\"page-body\">\n          <InputForm submitFunction={this.handleSubmit} />\n\n          {/* Results output area */}\n          {this.state.result == NO_RESULT ? (\n            <div />\n          ) : (\n            <ResultDisplay result={this.state.result} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}